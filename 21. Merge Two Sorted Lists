/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
void append(struct ListNode **headRef,int val){
    struct ListNode* newNode = (struct ListNode*) malloc(sizeof(struct ListNode));
    newNode -> val = val;
    newNode -> next = NULL;
    
    if( *headRef == NULL){
        *headRef = newNode;
        return;
    }
    struct ListNode *current = *headRef;
    while(current -> next != NULL){
        current = current -> next;
    }
    current -> next = newNode;
    return;
}

void printLinkedList(struct ListNode* head){
    printf("\n");
    struct ListNode* current = head;
    while(current){
        printf("%d ",current->val);
        current = current->next;
    }
    return;
}

struct ListNode* mergeTwoLists(struct ListNode* list1, struct ListNode* list2){
    struct ListNode* current1 = list1;
    struct ListNode* current2 = list2;
    struct ListNode* ans = NULL;
    
    while(current1 && current2){
        if(current1 -> val <= current2 -> val){
            append(&ans,current1->val);
            printLinkedList(ans);
            current1 = current1->next;
        }else{
            append(&ans,current2->val);
            printLinkedList(ans);
            current2 = current2->next;   
        }
    }
    
    while(current1){
        append(&ans,current1->val);
        printLinkedList(ans);
        current1 = current1 -> next;
    }
    
    while(current2){
        append(&ans,current2->val);
        printLinkedList(ans);
        current2 = current2 -> next;
    }
    
    return ans;
}
